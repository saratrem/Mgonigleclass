---
title: "demo_linearmodel"
author: "Sara"
date: "28/12/2020"
output: github_document
---

```{r}
library(tidyverse)
```


```{r}
#simple linear model with one predictor
#simple numeric predictor
num <- 100
pred <- rnorm(100, mean = 0, sd =1)
#rnorm: random generation for the normal distribution
hist(pred, col = 'red')

#response variable
effect.size <- 2
effect.sd <- 0.5 
response <- rnorm(num, mean = effect.size*pred, sd = effect.sd)
dd <- data.frame(pred= pred, response = response)
head(dd)

ggplot(data = dd, aes( x = pred, y = response)) + geom_point()
out <- lm(response ~ pred, data = dd)
summary(out)


coeffs <- coef(out)
b0 <- coeffs['(Intercept)']
b1 <- coeffs['pred']
```

```{r}
#multiple regression

#first predictor
num.A <- 50
num.B <- 50
p1 <- factor( c (rep('A', num.A), rep('B', num.B)))
p1
#rep : replicates the values in x

#second vector
p2 <- rnorm(num.A+num.B, mean = 0, sd = 1)
p2

#response variable
effect.size.A <- 1
effect.size.B <- -0.2

sd.A <- 0.25
sd.B <- 0.25

response <- c(rnorm(num.A, mean = effect.size.A *p2[p1 == 'A'], sd = sd.A), rnorm(num.B, mean = effect.size.B *p2[p1 == 'B'], sd =sd.B))

ff <- data.frame(p1= p1, p2 = p2, response = response)
head(ff)

#colour vector

plot.raw.data <- function() {
  col <- c(rep('red', num.A), rep('blue', num.B))
  plot(x =ff$p2, y= ff$response, xlab ='p2', ylab='response', col=col, pch = 16, las =1)
  legend('topleft',
         bty='n',
         legend= c('p1', 'p2'),
         col= c('red', 'blue'),
         pch=16)
  }
plot.raw.data()

#fit a model without an interaction

out2 <- lm(response ~ p1+p2, data = ff)
summary(out2)

#exttract model ecoeeffcient

coeff <- coef(out2)

b0 <- coeff ['(Intercept)']
b1 <- coeff['p1B'] 
b2 <- coeff['p2']

#lines
plot.raw.data <- function() {
  col <- c(rep('red', num.A), rep('blue', num.B))
  plot(x =ff$p2, y= ff$response, xlab ='p2', ylab='response', col=col, pch = 16, las =1)
  legend('topleft',
         bty='n',
         legend= c('p1', 'p2'),
         col= c('red', 'blue'),
         pch=16)
  curve(b0 + b1*0 + b2*x, from = min(ff$p2), 
        to = max(ff$p2), 
        add = TRUE, 
        col = 'blue')
  curve(b0 + b1*1 + b2*x, 
        from = min(ff$p2), 
        to =max(ff$p2), 
        add = TRUE, col= 'red')
  }
plot.raw.data()

#mode with an interaction
out <- lm ( response ~ p2*p1, data = ff)
coeff <- coef(out)

```

